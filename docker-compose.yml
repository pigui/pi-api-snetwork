version: '3.8'

services:
  gateway:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=gateway
    command: npm run start:gateway
    ports:
      - 3000:3000
    restart: always
    environment:
      - REDIS_URL=redis
      - REDIS_PORT=6379
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./apps/gateway:/usr/src/app/apps/gateway
    depends_on:
      - nats
      - redis
      - users-service
      - auth-service
      - posts-service
      - comments-service
  users-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=users-service
    restart: always
    environment:
      - DATABASE_URL=mongodb://users-db
      - DATABASE_PORT=27017
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis
      - REDIS_PORT=6379
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./apps/users-service:/usr/src/app/apps/users-service
    deploy:
      replicas: 3
    depends_on:
      - nats
      - users-db
      - redis
  users-db:
    image: mongo:5.0.26
    restart: always
    ports:
      - 27017:27017
  auth-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=auth-service
    command: npm run start:auth-service
    restart: always
    environment:
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis
      - REDIS_PORT=6379
      - JWT_SECRET=YOUR_SECRET_KEY_HERE
      - JWT_TOKEN_AUDIENCE=auth-service:3000
      - JWT_TOKEN_ISSUER=auth-service:3000
      - JWT_ACCESS_TOKEN_TTL=3600
      - JWT_REFRESH_TOKEN_TTL=86400
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./apps/auth-service:/usr/src/app/apps/auth-service
    depends_on:
      - nats
      - users-db
      - redis
  posts-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=posts-service
    command: npm run start:posts-service
    restart: always
    environment:
      - DATABASE_URL=mongodb://posts-db
      - DATABASE_PORT=27017
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis
      - REDIS_PORT=6379
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./apps/posts-service:/usr/src/app/apps/posts-service
    deploy:
      replicas: 1
    depends_on:
      - nats
      - posts-db
      - redis
  posts-db:
    image: mongo:5.0.26
    restart: always
  comments-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=comments-service
    command: npm run start:comments-service
    restart: always
    environment:
      - DATABASE_URL=mongodb://comments-db
      - DATABASE_PORT=27017
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis
      - REDIS_PORT=6379
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./apps/comments-service:/usr/src/app/apps/comments-service
    deploy:
      replicas: 1
    depends_on:
      - nats
      - comments-db
      - redis
  comments-db:
    image: mongo:5.0.26
    restart: always
  nats:
    image: nats:alpine
    restart: always
    ports:
      - 4222:4222
      - 6222:6222
  redis:
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
