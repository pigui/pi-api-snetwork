scalar Date

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  createdAt: Date!
  updatedAt: Date!
}

input CreateUserWithPasswordInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input FindUserByEmailInput {
  email: String!
}

input FindUserByIdInput {
  id: ID!
}

type Query {
  findUsers: [User!]
  findUserByEmail(findUserByEmailInput: FindUserByEmailInput!): User
  findUserById(findUserByIdInput: FindUserByIdInput!): User
}

type Mutation {
  createUser(createUserWithPasswordInput: CreateUserWithPasswordInput!): User!
}

type Subscription {
  userCreated: User!
}
